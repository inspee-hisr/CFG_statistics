ggsave("species_per_altitude_class_crete_scat.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
species_accumulation_crete <- crete_census %>% distinct(Species,Cave_ID) %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% filter(First_occurance==1) %>% group_by(Cave_ID) %>% mutate(First_occurance_per_cave=sum(First_occurance))# %>% group_by(First_occurance_per_cave) %>% summarise(number_of_caves=n()) #mutate(Cumulative_occurance= cumsum(First_occurance))
species_accumulation_crete_wide <- crete_census %>% mutate(species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% dplyr::select(Cave_ID,Species) %>% distinct() %>% mutate(presence=1) %>% spread(value = presence,key = Species,fill = 0) %>% tibble::column_to_rownames(.,var="Cave_ID")  # %>% dplyr::select(-Cave_ID)
acc <- specaccum(species_accumulation_crete_wide,"random")
data <- data.frame(Sites=acc$sites, Richness=acc$richness, SD=acc$sd)
ggplot() +
geom_point(data=data, aes(x=Sites, y=Richness)) +
geom_line(data=data, aes(x=Sites, y=Richness)) +
geom_ribbon(data=data ,aes(x=Sites, ymin=(Richness-2*SD),ymax=(Richness+2*SD)),alpha=0.2)+
scale_y_continuous(breaks = seq(0,300,25),limits = c(0,275))+
scale_x_continuous(breaks = seq(0,200,25),limits = c(0,175))+
ggtitle("Cave fauna of Crete accumulation curve")+
coord_equal()+
labs(x="Caves", y= "Number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("species_accumulation_crete.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
#' ## Census references Crete
census_long_man_crete <- census_long_man %>% filter(Cave_ID %in% caves_crete$Cave_ID) %>% left_join(Census_references,by=c("ReferenceShort"="Short")) %>% arrange(Year)
kable(head(census_long_man_crete,15))
census_long_man_reference <- census_long_man %>% left_join(Census_references,by=c("ReferenceShort"="Short"))
species_references_spreaded_arranged_crete <- census_long_man_reference %>% ungroup()  %>% filter(Cave_ID %in% caves_crete$Cave_ID) %>% dplyr::select(Species, ReferenceShort, Year) %>% group_by(Species,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% mutate(Cumulative_occurance= cumsum(First_occurance)) %>% mutate(Classification="All species") %>% dplyr::select(-c(Species,species_epithet,First_occurance)) %>% distinct(.)
endemic_cumulative_species_crete <- census_long_man_reference %>% left_join(species,by=c("Species"="Species_Full_Name")) %>% filter(Cave_ID %in% caves_crete$Cave_ID & Species %in% endemic_to_crete$Species) %>% dplyr::select(Species,Distribution, ReferenceShort, Year) %>% group_by(Species,Distribution,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% filter(First_occurance==1) %>% group_by(Year,Distribution) %>% summarise(Occurance_species_year= n()) %>% group_by(Distribution) %>% mutate(Cumulative_occurance= cumsum(Occurance_species_year)) %>% filter(Distribution=="Endemic to Greece") %>% mutate(Classification="Endemic species to Crete") %>% dplyr::select(-Occurance_species_year,-Distribution)
endemic_greek_cumulative_species_in_crete <- census_long_man_reference %>% left_join(species,by=c("Species"="Species_Full_Name")) %>% filter(Cave_ID %in% caves_crete$Cave_ID) %>% dplyr::select(Species,Distribution, ReferenceShort, Year) %>% group_by(Species,Distribution,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% filter(First_occurance==1) %>% group_by(Year,Distribution) %>% summarise(Occurance_species_year= n()) %>% group_by(Distribution) %>% mutate(Cumulative_occurance= cumsum(Occurance_species_year)) %>% filter(Distribution=="Endemic to Greece") %>% mutate(Classification="Endemic species to Greece") %>% dplyr::select(-Occurance_species_year,-Distribution)
census_long_man_reference_all_species_classification_crete <- census_long_man_reference %>% left_join(species,by=c("Species"="Species_Full_Name")) %>% filter(Cave_ID %in% caves_crete$Cave_ID) %>% dplyr::select(Species,Classification, ReferenceShort, Year) %>% group_by(Species,Classification,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% filter(First_occurance==1) %>% group_by(Year,Classification) %>% summarise(Occurance_species_year= n()) %>% group_by(Classification) %>% mutate(Cumulative_occurance= cumsum(Occurance_species_year)) %>% dplyr::select(-Occurance_species_year) %>% bind_rows(species_references_spreaded_arranged_crete) %>% filter(Classification %in% c("Troglobiont","Troglophile","All species")) %>% bind_rows(endemic_cumulative_species_crete) %>% bind_rows(endemic_greek_cumulative_species_in_crete)
species_occurrence_accumulation_classification_plot_crete <- ggplot()+
geom_line(data=census_long_man_reference_all_species_classification_crete,aes(x=Year, y= Cumulative_occurance,color=Classification),size=1,show.legend = T)+
#ggtitle("Class")+
scale_x_continuous(breaks = seq(1860,2020,10),limits = c(1860,2020),expand=c(0.015,0))+
scale_y_continuous(breaks = seq(0,300,25), limits = c(0,300),expand = c(0.01,0))+
scale_color_manual(values =c("Endemic species to Crete"="lightcoral","Troglophile"="paleturquoise","Troglobiont"="darkolivegreen3","All species"="deepskyblue","Endemic species to Greece"="darkorchid4"))+
labs(x="Years",y="Cumulative number of species in Crete")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size = 18),axis.text.y=element_text(margin = margin(t = 0, r = 5, b = 0, l = 15,unit = "pt"),size = 18),axis.text.x = element_text(margin = margin(t = 5, r = 0, b = 15, l = 0,unit = "pt"),size = 18),axis.title = element_text(size=22),panel.border = element_blank(),axis.line.x = element_line(colour = 'black', size = 0.3), axis.line.y = element_line(colour = 'black', size = 0.3),legend.position = c(0.13,0.87), legend.key.size = unit(1.5, "cm"), legend.title = element_blank())
ggsave("species_occurrence_accumulation_classification_crete.png", plot = species_occurrence_accumulation_classification_plot_crete, device = "png",width = 20,height = 11.25,units = "in", dpi = 100,path = "Plots/")
caves_crete_Database_kml_to_txt <- caves_crete %>% dplyr::select(Cave_Name,Cave_ID,Latitude, Longitude,Subregion) %>% na.omit()
caves_crete_Database_kml_to_txt$Latitude <- as.numeric(caves_crete_Database_kml_to_txt$Latitude)
caves_crete_Database_kml_to_txt$Longitude <- as.numeric(caves_crete_Database_kml_to_txt$Longitude)
caves_crete_Database_kml_to_txt$ID <- as.character(seq(1:nrow(caves_crete_Database_kml_to_txt)))
caves_crete_Database_kml_to_txt_shapefile_wgs84 <- caves_crete_Database_kml_to_txt
coordinates(caves_crete_Database_kml_to_txt_shapefile_wgs84)<-~Longitude+Latitude
proj4string(caves_crete_Database_kml_to_txt_shapefile_wgs84) <- CRS("+proj=longlat +datum=WGS84")# CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")  # this is WGS84
caves_crete_Database_kml_to_txt_shapefile <- spTransform(caves_crete_Database_kml_to_txt_shapefile_wgs84, CRS( "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs +ellps=GRS80
+towgs84=-199.87,74.79,246.62"))
#' ### Geological maps of Crete
#Rethymno
rethymno_geomap  <- rgdal::readOGR("Shapefiles/Crete_geological_map_SHP/rethymno/geo_uniRETHYMNON.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
#,p4s = "+proj=longlat +datum=WGS84 +ellps=GRS80 +units=m +no_defs"
rethymno_geomap_wgs84 <- spTransform(rethymno_geomap, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
rethymno_geomap_names <- rethymno_geomap_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(rethymno_geomap_wgs84@data)-1))))
rethymno_geomap_data <- tidy(rethymno_geomap_wgs84) %>% left_join(rethymno_geomap_names,by=c("id"="id"))
over_rethymno_geomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = rethymno_geomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Irakleio
irakleio_geomap  <- rgdal::readOGR("Shapefiles/Crete_geological_map_SHP/irakleio/geo_uniHERAKLION.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
irakleio_geomap_wgs84 <- spTransform(irakleio_geomap, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
irakleio_geomap_names <- irakleio_geomap_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(irakleio_geomap_wgs84@data)-1))))
irakleio_geomap_data <- tidy(irakleio_geomap_wgs84) %>% left_join(irakleio_geomap_names,by=c("id"="id"))
irakleio_geomap_data <- broom::tidy(irakleio_geomap_wgs84) %>% left_join(irakleio_geomap_names,by=c("id"="id"))
over_irakleio_geomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = irakleio_geomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Chania
chania_geomap  <- rgdal::readOGR("Shapefiles/Crete_geological_map_SHP/chania",layer = "geo_uniCHANIA",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
chania_geomap_wgs84 <- spTransform(chania_geomap, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
chania_geomap_names <- chania_geomap_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(chania_geomap_wgs84@data)-1))))
chania_geomap_data <- broom::tidy(chania_geomap_wgs84) %>% left_join(chania_geomap_names,by=c("id"="id"))
over_chania_geomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = chania_geomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
lasithi1_geomap  <- rgdal::readOGR("Shapefiles/Crete_geological_map_SHP/lasithi/geo_uniLASITHI_1.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
lasithi1_geomap_wgs84 <- spTransform(lasithi1_geomap, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
lasithi1_geomap_names <- lasithi1_geomap_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(lasithi1_geomap_wgs84@data)-1))))
lasithi1_geomap_data <- tidy(lasithi1_geomap_wgs84) %>% left_join(lasithi1_geomap_names,by=c("id"="id"))
lasithi1_geomap_data <- broom::tidy(lasithi1_geomap_wgs84) %>% left_join(lasithi1_geomap_names,by=c("id"="id"))
over_lasithi1_geomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = lasithi1_geomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
lasithi2_geomap  <- rgdal::readOGR("Shapefiles/Crete_geological_map_SHP/lasithi/geo_uniLASITHI_2.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
lasithi2_geomap_wgs84 <- spTransform(lasithi2_geomap, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
lasithi2_geomap_names <- lasithi2_geomap_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(lasithi2_geomap_wgs84@data)-1))))
lasithi2_geomap_data <- broom::tidy(lasithi2_geomap_wgs84) %>% left_join(lasithi2_geomap_names,by=c("id"="id"))
over_lasithi2_geomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = lasithi2_geomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
all_rock_types_crete <- rbind(rethymno_geomap@data,irakleio_geomap@data,chania_geomap@data,lasithi1_geomap@data,lasithi2_geomap@data) %>% distinct() %>% mutate(color_manual=colorRampPalette(c("orangered2","palegreen3","skyblue1","slateblue1","pink2","sienna3"),space="Lab")( 14 ))
crete_caves_over_geomaps <- rbind(bind_rows(over_rethymno_geomap_data,.id = "ID"),bind_rows(over_irakleio_geomap_data,.id = "ID"),bind_rows(over_chania_geomap_data,.id = "ID"),bind_rows(over_lasithi1_geomap_data,.id = "ID"),bind_rows(over_lasithi2_geomap_data,.id = "ID"))
crete_caves_geomap_data <-caves_crete_Database_kml_to_txt %>% left_join(crete_caves_over_geomaps,by=c("ID"="ID"))
color_geomaps <- as.character(all_rock_types_crete$color_manual)
names(color_geomaps) <- all_rock_types_crete$NEW
crete_geomap_data <- ggplot()+
geom_polygon(data = chania_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = rethymno_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = irakleio_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = lasithi1_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = lasithi2_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_point(data = caves,aes(x=Longitude, y=Latitude,color="Caves"),size = 2.5)+
ggtitle("Crete Geological map")+
labs(x="Longitude",y="Latitude")+
scale_color_manual(name="", values = c("Caves"="red"))+
scale_fill_manual(name = "Rock type",values =color_geomaps )+
scale_x_continuous(breaks = seq(23,26.5,0.5),limits = c(23.2,26.5))+
scale_y_continuous(breaks = seq(34.5,36,0.5),limits = c(34.5,36))+
coord_map(xlim = c(23.2,26.5), ylim = c(34.5,36))+
#coord_fixed(ratio = 1)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size=22),legend.title = element_text(size=14),axis.text = element_text(size=18), axis.title = element_text(size=22))
rethymno_geomap_data <- broom::tidy(rethymno_geomap_wgs84) %>% left_join(rethymno_geomap_names,by=c("id"="id"))
over_rethymno_geomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = rethymno_geomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Irakleio
irakleio_geomap  <- rgdal::readOGR("Shapefiles/Crete_geological_map_SHP/irakleio/geo_uniHERAKLION.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
irakleio_geomap_wgs84 <- spTransform(irakleio_geomap, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
irakleio_geomap_names <- irakleio_geomap_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(irakleio_geomap_wgs84@data)-1))))
irakleio_geomap_data <- broom::tidy(irakleio_geomap_wgs84) %>% left_join(irakleio_geomap_names,by=c("id"="id"))
over_irakleio_geomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = irakleio_geomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Chania
chania_geomap  <- rgdal::readOGR("Shapefiles/Crete_geological_map_SHP/chania",layer = "geo_uniCHANIA",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
crete_geomap_data <- ggplot()+
geom_polygon(data = chania_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = rethymno_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = irakleio_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = lasithi1_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_polygon(data = lasithi2_geomap_data,aes(x=long, y=lat,group = group,fill=NEW),lwd=0.082, alpha=0.6)+
geom_point(data = caves,aes(x=Longitude, y=Latitude,color="Caves"),size = 2.5)+
ggtitle("Crete Geological map")+
labs(x="Longitude",y="Latitude")+
scale_color_manual(name="", values = c("Caves"="red"))+
scale_fill_manual(name = "Rock type",values =color_geomaps )+
scale_x_continuous(breaks = seq(23,26.5,0.5),limits = c(23.2,26.5))+
scale_y_continuous(breaks = seq(34.5,36,0.5),limits = c(34.5,36))+
coord_map(xlim = c(23.2,26.5), ylim = c(34.5,36))+
#coord_fixed(ratio = 1)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size=22),legend.title = element_text(size=14),axis.text = element_text(size=18), axis.title = element_text(size=22))
ggsave("crete_geomap_data.png", plot = crete_geomap_data, device = "png",width = 20,height = 11.25,units = "in", dpi = 100 ,path = "Plots/")
crete_caves_geology_data_sum <- crete_caves_geomap_data %>% group_by(Subregion,NEW,FORMATION) %>% summarise(number_of_caves=n()) %>% ungroup() %>% na.omit() %>% left_join(all_rock_types_crete,by=c("NEW"="NEW"))
color <- as.character(crete_caves_geology_data_sum$color_manual)
names(color) <- crete_caves_geology_data_sum$NEW
crete_caves_geology_data_sum_all <- crete_caves_geology_data_sum %>% group_by(NEW) %>% summarise(number_of_caves=sum(number_of_caves))
ggplot()+
geom_col(data = crete_caves_geology_data_sum_all, position =position_dodge(),aes(x=NEW, y= number_of_caves, fill=NEW),show.legend = T)+
geom_text(data = crete_caves_geology_data_sum_all, stat = "identity",aes(x=NEW, y= number_of_caves,label=number_of_caves, group=NEW), position="identity", hjust=0.5,vjust=-0.25,size=3)+
scale_y_continuous(breaks = seq(0,80,5),limits = c(0,80))+
ggtitle("Rock formation of Caves of Crete")+
labs(x="Rock Formation", y= "Number of caves")+
scale_fill_manual(name="Rock Formation",values = color)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("crete_geology_caves_barplot.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
ggplot()+
geom_col(data = crete_caves_geology_data_sum, position =position_dodge(),aes(x=Subregion, y= number_of_caves, fill=NEW),show.legend = T)+
geom_text(data = crete_caves_geology_data_sum, aes(x=Subregion, y= number_of_caves+0.15,label=number_of_caves, group=NEW), position=position_dodge(0.9),vjust=-0.25,size=3)+
scale_y_continuous(breaks = seq(0,20,2),limits = c(0,20))+
ggtitle("Rock formation of Caves of Crete per subregion")+
labs(x="Administrative Subregion", y= "Number of caves")+
scale_fill_manual(name="Rock Formation",values = color)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("crete_geology_caves_subregion_barplot.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
#Rethymno
rethymno_lithomap  <- rgdal::readOGR("Shapefiles/Crete_lithologic_map/rethymno_s/hydroRETHYMNON.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
rethymno_lithomap@data <- rethymno_lithomap@data %>% mutate(ID=rep.int(0,nrow(.)))
rethymno_lithomap_wgs84 <- spTransform(rethymno_lithomap, CRS("+proj=longlat +datum=GGRS87 +no_defs"))
rethymno_lithomap_names <- rethymno_lithomap_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(rethymno_lithomap_wgs84@data)-1))))
rethymno_lithomap_data <- tidy(rethymno_lithomap_wgs84) %>% left_join(rethymno_lithomap_names,by=c("id"="id"))
rethymno_lithomap_data <- broom::tidy(rethymno_lithomap_wgs84) %>% left_join(rethymno_lithomap_names,by=c("id"="id"))
over_rethymno_lithomap_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = rethymno_lithomap , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Irakleio 1
irakleio_lithomap_1  <- rgdal::readOGR("Shapefiles/Crete_lithologic_map/irakleio/hydroHERAKLION_1.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
irakleio_lithomap_1_wgs84 <- spTransform(irakleio_lithomap_1, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
irakleio_lithomap_1_names <- irakleio_lithomap_1_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(irakleio_lithomap_1_wgs84@data)-1))))
irakleio_lithomap_1_data <- tidy(irakleio_lithomap_1_wgs84) %>% left_join(irakleio_lithomap_1_names,by=c("id"="id"))
irakleio_lithomap_1_data <- broom::tidy(irakleio_lithomap_1_wgs84) %>% left_join(irakleio_lithomap_1_names,by=c("id"="id"))
over_irakleio_lithomap_1_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = irakleio_lithomap_1 , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Irakleio 2
irakleio_lithomap_2  <- rgdal::readOGR("Shapefiles/Crete_lithologic_map/irakleio/hydroHERAKLION_2.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
irakleio_lithomap_2_wgs84 <- spTransform(irakleio_lithomap_2, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
irakleio_lithomap_2_names <- irakleio_lithomap_2_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(irakleio_lithomap_2_wgs84@data)-1))))
irakleio_lithomap_2_data <- tidy(irakleio_lithomap_2_wgs84) %>% left_join(irakleio_lithomap_2_names,by=c("id"="id"))
irakleio_lithomap_2_data <- broom::tidy(irakleio_lithomap_2_wgs84) %>% left_join(irakleio_lithomap_2_names,by=c("id"="id"))
over_irakleio_lithomap_2_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = irakleio_lithomap_2 , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Chania 1
chania_lithomap_1  <- rgdal::readOGR("Shapefiles/Crete_lithologic_map/chania/hydroCHANIA_1.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
chania_lithomap_1_wgs84 <- spTransform(chania_lithomap_1, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
chania_lithomap_1_names <- chania_lithomap_1_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(chania_lithomap_1_wgs84@data)-1))))
chania_lithomap_1_data <- tidy(chania_lithomap_1_wgs84) %>% left_join(chania_lithomap_1_names,by=c("id"="id"))
chania_lithomap_1_data <- broom::tidy(chania_lithomap_1_wgs84) %>% left_join(chania_lithomap_1_names,by=c("id"="id"))
over_chania_lithomap_1_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = chania_lithomap_1 , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Chania 2
chania_lithomap_2  <- rgdal::readOGR("Shapefiles/Crete_lithologic_map/chania/hydroCHANIA_2.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
chania_lithomap_2_wgs84 <- spTransform(chania_lithomap_2, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
chania_lithomap_2_names <- chania_lithomap_2_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(chania_lithomap_2_wgs84@data)-1))))
chania_lithomap_2_data <- tidy(chania_lithomap_2_wgs84) %>% left_join(chania_lithomap_2_names,by=c("id"="id"))
chania_lithomap_2_data <- broom::tidy(chania_lithomap_2_wgs84) %>% left_join(chania_lithomap_2_names,by=c("id"="id"))
over_chania_lithomap_2_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = chania_lithomap_2 , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Lasithi 1
lasithi_lithomap_1  <- rgdal::readOGR("Shapefiles/Crete_lithologic_map/lasithi/hydroLASSITHI_1.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
lasithi_lithomap_1_wgs84 <- spTransform(lasithi_lithomap_1, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
lasithi_lithomap_1_names <- lasithi_lithomap_1_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(lasithi_lithomap_1_wgs84@data)-1))))
lasithi_lithomap_1_data <- broom::tidy(lasithi_lithomap_1_wgs84) %>% left_join(lasithi_lithomap_1_names,by=c("id"="id"))
over_lasithi_lithomap_1_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = lasithi_lithomap_1 , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
#Lasithi 2
lasithi_lithomap_2  <- rgdal::readOGR("Shapefiles/Crete_lithologic_map/lasithi/hydroLASSITHI_2.shp",verbose = T,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs", use_iconv = FALSE,encoding = "ISO-8859-7")
lasithi_lithomap_2@data <- lasithi_lithomap_2@data %>% dplyr::select(-Shape_Area,-Shape_Leng)
lasithi_lithomap_2_wgs84 <- spTransform(lasithi_lithomap_2, CRS(" +proj=longlat +datum=GGRS87 +no_defs"))
lasithi_lithomap_2_names <- lasithi_lithomap_2_wgs84@data %>% mutate(id=as.character(seq(from=0,to=(nrow(lasithi_lithomap_2_wgs84@data)-1))))
lasithi_lithomap_2_data <- broom::tidy(lasithi_lithomap_2_wgs84) %>% left_join(lasithi_lithomap_2_names,by=c("id"="id"))
over_lasithi_lithomap_2_data <- over( x = caves_crete_Database_kml_to_txt_shapefile , y = lasithi_lithomap_2 , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
all_lithology_crete <- do.call("rbind",list(rethymno_lithomap@data,irakleio_lithomap_1@data,irakleio_lithomap_2@data,chania_lithomap_1@data,chania_lithomap_2@data,lasithi_lithomap_1@data,lasithi_lithomap_2@data)) %>% distinct()  %>% mutate(color_manual=colorRampPalette(c("orangered2","palegreen3","skyblue1","slateblue1","pink2","sienna3"),space="Lab")( 11 ))
crete_caves_over_lithomaps <- rbind(bind_rows(over_rethymno_lithomap_data,.id = "ID_cave"),bind_rows(over_irakleio_lithomap_1_data,.id = "ID_cave"),bind_rows(over_irakleio_lithomap_2_data,.id = "ID_cave"),bind_rows(over_chania_lithomap_1_data,.id = "ID_cave"),bind_rows(over_chania_lithomap_2_data,.id = "ID_cave"),bind_rows(over_lasithi_lithomap_1_data,.id = "ID_cave"),bind_rows(over_lasithi_lithomap_2_data,.id = "ID_cave"))
crete_caves_lithology_data <-caves_crete_Database_kml_to_txt %>% left_join(crete_caves_over_lithomaps,by=c("ID"="ID_cave")) %>% na.omit()
color_lith <- as.character(all_lithology_crete$color_manual)
names(color_lith) <- all_lithology_crete$Code_1
crete_lithomap_data <- ggplot()+
geom_polygon(data = chania_lithomap_1_data,aes(x=long, y=lat,group = group,fill=Code_1),lwd=0.082, alpha=0.6)+
geom_polygon(data = chania_lithomap_2_data,aes(x=long, y=lat,group = group,fill=Code_1),lwd=0.082, alpha=0.6)+
geom_polygon(data = rethymno_lithomap_data,aes(x=long, y=lat,group = group,fill=Code_1),lwd=0.082, alpha=0.6)+
geom_polygon(data = irakleio_lithomap_1_data,aes(x=long, y=lat,group = group,fill=Code_1),lwd=0.082, alpha=0.6)+
geom_polygon(data = irakleio_lithomap_2_data,aes(x=long, y=lat,group = group,fill=Code_1),lwd=0.082, alpha=0.6)+
geom_polygon(data = lasithi_lithomap_1_data,aes(x=long, y=lat,group = group,fill=Code_1),lwd=0.082, alpha=0.6)+
geom_polygon(data = lasithi_lithomap_2_data,aes(x=long, y=lat,group = group,fill=Code_1),lwd=0.082, alpha=0.6)+
geom_point(data = caves,aes(x=Longitude, y=Latitude,color="Caves"),size = 2.5)+
ggtitle("Crete Lithological map")+
labs(x="Longitude",y="Latitude")+
scale_color_manual(name="", values = c("Caves"="red"))+
scale_fill_manual(name = "Rock type",values = color_lith)+
scale_x_continuous(breaks = seq(23,26.5,0.5),limits = c(23.2,26.5))+
scale_y_continuous(breaks = seq(34.5,36,0.5),limits = c(34.5,36))+
coord_map(xlim = c(23.2,26.5), ylim = c(34.5,36))+
#coord_fixed(ratio = 1)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size=22),legend.title = element_text(size=22),axis.text = element_text(size=18), axis.title = element_text(size=22))
ggsave("crete_lithomap_data.png", plot = crete_lithomap_data,device = "png",width = 20,height = 11.25,units = "in", dpi = 100 ,path = "Plots/")
crete_caves_lithology_data_sum <- crete_caves_lithology_data %>% group_by(Subregion,Code_1,Category_1) %>% summarise(number_of_caves=n()) %>% ungroup()
crete_caves_lithology_data_sum_all <- crete_caves_lithology_data_sum %>% group_by(Code_1,Category_1) %>% summarise(number_of_caves=sum(number_of_caves))
ggplot()+
geom_col(data = crete_caves_lithology_data_sum_all, position =position_dodge(),aes(x=Code_1, y= number_of_caves, fill=Code_1),show.legend = T)+
geom_text(data = crete_caves_lithology_data_sum_all, stat = "identity",aes(x=Code_1, y= number_of_caves,label=number_of_caves, group=Code_1), position="identity", hjust=0.5,vjust=-0.25,size=3)+
scale_y_continuous(breaks = seq(0,80,5),limits = c(0,80))+
#ggtitle("Caves Greece")+
labs(x="Lithology", y= "Number of caves")+
scale_fill_manual(name="Lithology",values = color_lith)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("crete_lithology_caves_barplot.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
ggplot()+
geom_col(data = crete_caves_lithology_data_sum, position =position_dodge(),aes(x=Subregion, y= number_of_caves, fill=Code_1),show.legend = T)+
geom_text(data = crete_caves_lithology_data_sum, aes(x=Subregion, y= number_of_caves+0.15,label=number_of_caves, group=Code_1), position=position_dodge(0.9),vjust=-0.25,size=3)+
scale_y_continuous(breaks = seq(0,20,2),limits = c(0,20))+
#ggtitle("Caves Greece")+
labs(x="Administrative Subregion", y= "Number of caves")+
scale_fill_manual(name="Lithology",values = color_lith)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("crete_lithology_caves_subregion_barplot.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
colnames( natura2000shapefile@data)
### Natura 2000 TIDY
names_natura2000shapefile <- natura2000shapefile@data %>% mutate(id=as.character(seq(from=0,to=(nrow(.)-1)))) %>% mutate(NAME_LATIN_lower_letters=capwords(tolower(NAME_LATIN))) %>% mutate(SITETYPE_NATURA=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation ", "Special Protection Area - Special Area of Conservation"))))
colnames(caves_in_over_natura)
colnames(caves_in_over_NEW_natura)
#  left_join(.,over_natura_NEW_v30_d, by=c("Cave_ID"="Cave_ID")) %>%
caves_protection <- caves %>% dplyr::select(Cave_ID) %>% left_join(.,caves_in_over_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(.,caves_in_over_NEW_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(., caves_in_over_katafygia_agrias_zwhs, by=c("Cave_ID"="Cave_ID")) %>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN))))) %>% mutate(NAME_LATIN_NEW_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NEW_NATURA))))) %>% mutate(SITETYPE_NATURA_ALL=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))),SITETYPE_NEW_NATURA_ALL=ifelse(is.na(SITETYPE_NEW_NATURA), NA_character_, ifelse(SITETYPE_NEW_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NEW_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))))
colnames(caves_protection)
caves_protection <- caves %>% dplyr::select(Cave_ID) %>% left_join(.,caves_in_over_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(.,caves_in_over_NEW_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(., caves_in_over_katafygia_agrias_zwhs, by=c("Cave_ID"="Cave_ID")) %>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN))))) %>% mutate(NAME_LATIN_NEW_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NEW_NATURA))))) %>% mutate(SITETYPE_NATURA_ALL=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))),SITETYPE_NEW_NATURA_ALL=ifelse(is.na(SITETYPE_NEW_NATURA), NA_character_, ifelse(SITETYPE_NEW_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NEW_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))))
#  left_join(.,over_natura_NEW_v30_d, by=c("Cave_ID"="Cave_ID")) %>%
caves_protection <- caves %>% dplyr::select(Cave_ID) %>% left_join(.,caves_in_over_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(.,caves_in_over_NEW_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(., caves_in_over_katafygia_agrias_zwhs, by=c("Cave_ID"="Cave_ID")) #%>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN))))) %>% mutate(NAME_LATIN_NEW_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NEW_NATURA))))) %>% mutate(SITETYPE_NATURA_ALL=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))),SITETYPE_NEW_NATURA_ALL=ifelse(is.na(SITETYPE_NEW_NATURA), NA_character_, ifelse(SITETYPE_NEW_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NEW_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))))
caves_protection
caves_protection %>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN)))))
#  left_join(.,over_natura_NEW_v30_d, by=c("Cave_ID"="Cave_ID")) %>%
caves_protection <- caves %>% dplyr::select(Cave_ID) %>% left_join(.,caves_in_over_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(.,caves_in_over_NEW_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(., caves_in_over_katafygia_agrias_zwhs, by=c("Cave_ID"="Cave_ID")) %>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN))))) %>% mutate(NAME_LATIN_NEW_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NEW_NATURA))))) %>% mutate(SITETYPE_NATURA_ALL=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))),SITETYPE_NEW_NATURA_ALL=ifelse(is.na(SITETYPE_NEW_NATURA), NA_character_, ifelse(SITETYPE_NEW_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NEW_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))))
#!/usr/bin/env Rscript
# Data manipulation packages
library(gridExtra)
library(grid)
library(tidyverse)
library(kableExtra)
## Data for species
library(rredlist)
library(taxize)
#library(rgbif)
#library(ISOcodes)
#library(spocc)
# Spatial analysis packages
library(RColorBrewer)
#library(ggmap)
library(rgdal)
#library(geosphere)
#library(GISTools)
#library(leaflet)
#library(rgeos)
library(maptools)
#library(tmap)
library(Rcpp)
library(sp)
library(raster) ##Load the Raster Library
# Species statistics
#library(red)
library(vegan)
data_files <- list.files(path = "Data")
# Data import from Database Export, the files are choosen automatically based on their name. The folder Data must contain only the latest data files.
Cave_References <- read_delim(file = paste0("Data/",grep("Cave_References",data_files,value = TRUE)),delim = "\t")
caves <- read_delim(file = paste0("Data/",grep("Caves",data_files,value = TRUE)),delim = "\t")
caves$Longitude <- as.numeric(caves$Longitude)
caves$Latitude <- as.numeric(caves$Latitude)
census <- read_delim(file = paste0("Data/",grep("Census_\\d",data_files,value = TRUE)),delim = "\t")
Census_references <- read_delim(file = paste0("Data/",grep("Census_references",data_files,value = TRUE)),delim = "\t")
species <- read_delim(file = paste0("Data/",grep("Species_",data_files,value = TRUE)),delim = "\t") %>% mutate(Classification=gsub(pattern="\\?",replacement = "",x = Classification))# Data import from Database Export
census$species_epithet <- as.character(lapply(strsplit(as.character(census$Species), split=" "), "[", n=2))
census_all_species <- census %>% left_join(species,by=c("Species"="Species_Full_Name"))
census_all_species_all_caves <- census_all_species %>% dplyr::select(-Cave_Name) %>% left_join(caves, by=c("Cave_ID"="Cave_ID"))
census_long_str_man <- strsplit(x = census_all_species$Reference_Short,split = "|",fixed=TRUE)
census_long_str_man_id <- strsplit(x = census_all_species$Reference_ID,split = "|",fixed=TRUE)
census_long_man <- data_frame(ReferenceShort=unlist(census_long_str_man),reference_id=unlist(census_long_str_man_id),CaveName=rep.int(census_all_species$Cave_Name,times = sapply(census_long_str_man,length)),Cave_ID=rep.int(census_all_species$Cave_ID,times = sapply(census_long_str_man,length)),Census_id=rep.int(census_all_species$Census_ID,times = sapply(census_long_str_man,length)),Species=rep.int(census_all_species$Species,times = sapply(census_long_str_man,length))) %>% group_by(ReferenceShort,Cave_ID,CaveName,Species,Census_id) %>% summarise(n=n()) %>% ungroup() %>% mutate(Species=trimws(Species,"r"))
## Regions
caves_Region <- caves %>% dplyr::select(Cave_ID, Region) %>% distinct() %>% group_by(Region) %>% summarize(number_of_caves=n()) %>% na.omit() %>% mutate(color_manual=colorRampPalette(c("orangered2","palegreen3","skyblue1","slateblue1","pink2","sienna3"),space="Lab")( 14 ))
ggplot()+
geom_col(data = caves_Region, aes(x=Region, y= number_of_caves, fill=Region),show.legend = F)+
geom_text(data = caves_Region,aes(x =Region,y= number_of_caves, label=number_of_caves), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,200,50),limits = c(0,200))+
#ggtitle("Caves Greece")+
labs(x="Administrative Region", y= "Number of caves")+
scale_fill_manual(values = caves_Region$color_manual)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("caves_Region_barplot.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
#' Both species and caves per region.
species_region_endemic <- census_all_species_all_caves %>% filter(species_epithet!="sp.") %>% filter(Distribution=="Endemic to Greece") %>% dplyr::select(Species,Distribution, Region) %>% distinct(.) %>% group_by(Region) %>% summarise(number_of_endemic_species=n()) %>% na.omit()
species_Region <- census_all_species_all_caves %>% filter(species_epithet!="sp.") %>% dplyr::select(Species,Region) %>% distinct() %>% group_by(Region) %>% summarise(number_of_species=n()) %>% na.omit()
species_troglobiont_Region <- census_all_species_all_caves %>% filter(species_epithet!="sp.") %>% dplyr::select(Species,Region, Classification) %>% distinct() %>% filter(Classification=="Troglobiont") %>% group_by(Region) %>% summarise(number_of_troglobiont_species=n()) %>% na.omit()
caves_species_region <- species_Region %>% left_join(caves_Region, by=c("Region"="Region")) %>% left_join(species_region_endemic, by=c("Region"="Region")) %>% left_join(species_troglobiont_Region, by=c("Region"="Region")) %>% gather(key = Variable,value = number,-Region,-color_manual) %>% replace(is.na(.),0)
caves_species_region$Variable <- factor(caves_species_region$Variable, levels = c("number_of_caves","number_of_species","number_of_endemic_species","number_of_troglobiont_species"))
caves_species_region_plot <- ggplot()+
geom_col(data = caves_species_region, aes(x=Region, y= number, fill=Variable),width=0.82, position = position_dodge(width = 0.82),show.legend = T)+
geom_text(data = caves_species_region,aes(x =Region,y= number, label=number,group=Variable), position=position_dodge(width = 0.87), vjust=-0.25,size=5)+
scale_y_continuous(breaks = seq(0,280,20),limits = c(0,285),expand = c(0.01,0.4))+
scale_x_discrete(expand = c(0.01,0.4))+
scale_fill_manual(label=c("Caves","All species","Species endemic to Greece","Troglobiont species"),values = c("coral1","lightgoldenrod2","lightpink1","lightblue1"),name="")+
labs(x="Region", y= "Count")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size = 18),axis.text.y=element_text(margin = margin(t = 0, r = 0, b = 0, l = 10,unit = "pt"),size = 18),axis.text.x = element_text(angle = 45, hjust = 1,size = 18),axis.title = element_text(size=22),panel.border = element_blank(),axis.line.x = element_line(colour = 'black', size = 0.3), axis.line.y = element_line(colour = 'black', size = 0.3),legend.position = c(0.13,0.87), legend.key.size = unit(1, "cm"))
ggsave("caves_species_region.png", plot = caves_species_region_plot, device = "png",width = 20,height = 11.25,units = "in", dpi = 100,path = "Website_plots/")
## Species taxonomy
species_class <- species %>% dplyr::select(Species_Full_Name,Class) %>% distinct() %>% group_by(Class) %>% summarise(number_of_species=n()) %>% na.omit() %>% mutate(color_manual=colorRampPalette(c("orangered2","palegreen3","skyblue1","slateblue1","pink2","goldenrod1","slategray2"),space="Lab")( 20 ))
species_class_barplot <- ggplot()+
geom_col(data = species_class, aes(x=Class, y= number_of_species, fill=Class),show.legend = F)+
geom_text(data = species_class,aes(x =Class,y= number_of_species, label=number_of_species), position=position_dodge(width=0.7), vjust=-0.25,size=6)+
scale_y_continuous(breaks = seq(0,300,25),limits = c(0,300))+
labs(x="Class", y= "Number of species")+
scale_fill_manual(values = species_class$color_manual)+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size = 22),axis.text.y=element_text(size = 18),axis.text.x = element_text(angle = 45, hjust = 1,size = 18),axis.title = element_text(size=22),panel.border = element_blank(),axis.line.x = element_line(colour = 'black', size = 0.3), axis.line.y = element_line(colour = 'black', size = 0.3),legend.position = c(0.15,0.91), legend.key.size = unit(1, "cm"))
ggsave("species_class_barplot.png", plot = species_class_barplot, device = "png",width = 20,height = 15,units = "in", dpi = 100,path = "Website_plots/")
# Table for statistics tab on the website: for each phylum, for each class, for each order count number of families, genera, species
species_na_order <- species %>% filter(is.na(Order))
species_taxonomy_table <- species %>% dplyr::select(Species_Full_Name,Genus,Family,Order,Class,Phylum) %>% group_by(Genus,Family,Order,Class,Phylum) %>% summarise(Species=n()) %>% group_by(Family,Order,Class,Phylum) %>% summarise(Genera=n(),Species=sum(Species)) %>% group_by(Order,Class,Phylum) %>% summarise(Families=n(),Genera=sum(Genera),Species=sum(Species)) %>% group_by(Class,Phylum) %>% mutate(Orders=n()) %>% ungroup()
# Create Taxonomic Summary Table for The Database Statistics
database_taxonomic_summary <- as_tibble(matrix(ncol = 5))
colnames(database_taxonomic_summary)<- c("TAXA","Orders","Families","Genera","Species")
phyla <- unique(species_taxonomy_table$Phylum)
for(i in 1:length(phyla)) {
phylum <- as_tibble(matrix(c(paste0("Phylum ",phyla[i]),NA,NA,NA,NA),ncol = 5))
colnames(phylum)<- c("TAXA","Orders","Families","Genera","Species")
database_taxonomic_summary <- rbind(database_taxonomic_summary,phylum)
class <- species_taxonomy_table %>% filter(Phylum==phyla[i]) %>%
group_by(Class,Orders) %>%   summarise(Families=sum(Families),Genera=sum(Genera),Species=sum(Species)) %>% dplyr::rename(TAXA=Class) %>% ungroup()
for(j  in 1:nrow(class)) {
database_taxonomic_summary <- rbind(database_taxonomic_summary,class[j,])
orders <- species_taxonomy_table %>% filter(Class==as.character(class[j,1])) %>% dplyr::select(Order,Orders,Families,Genera,Species) %>% dplyr::rename(TAXA=Order) %>% mutate(Orders=NA) %>% ungroup()
database_taxonomic_summary <- rbind(database_taxonomic_summary,orders)
}
}
# Create summary, totals
TOTAL <- as_tibble(matrix(c(NA,NA,NA,NA,NA,"TOTAL",length(unique(species$Order)),length(unique(species$Family)),length(unique(species$Genus)),length(unique(species$Species_Full_Name))),ncol = 5,nrow = 2,byrow = T))
colnames(TOTAL)<- c("TAXA","Orders","Families","Genera","Species")
database_taxonomic_summary <- database_taxonomic_summary[-1,] %>% rbind(.,TOTAL)
write_delim(database_taxonomic_summary,delim = "\t",col_names = T,path = "database_taxonomic_summary.tsv",na = " ")
database_taxonomic_summary[is.na(database_taxonomic_summary)] <- " " # replace NA with space
# HTML formatting and exporting
database_taxonomic_summary %>% mutate(TAXA = cell_spec(TAXA, "html", bold = ifelse(grepl(pattern = "^Phylum",x = database_taxonomic_summary$TAXA), "TRUE", ifelse(database_taxonomic_summary$Orders!=" ", "TRUE", "FALSE")),underline = ifelse(grepl(pattern = "^Phylum",x = database_taxonomic_summary$TAXA), "TRUE", "FALSE"))) %>% kable(format = "html", escape = F) %>% kable_styling(bootstrap_options = c("hover","condensed"),font_size = 15) %>% cat(., file = "Website_plots/database_taxonomic_summary.html")
# check the font type
# import in Website: paste the html code in source code of the edit stats page,
#
### Taxonomy endemic
species_class_endemic <- species %>% filter(Distribution=="Endemic to Greece") %>% dplyr::select(Species_Full_Name,Class) %>% distinct() %>% group_by(Class) %>% summarise(number_of_species=n()) %>% na.omit()
ggplot()+
geom_col(data = species_class_endemic, aes(x=Class, y= number_of_species, fill=Class),show.legend = F)+
geom_text(data = species_class_endemic,aes(x =Class,y= number_of_species, label=number_of_species), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,300,50),limits = c(0,300))+
ggtitle("Species endemic to Greece")+
labs(x="Class", y= "Number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_class_barplot_endemic.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
# bar plots with Arachnida, Insecta, Malacostrata orders
most_abudant_classes <- species %>% filter(Class=="Arachnida" | Class=="Insecta" | Class=="Malacostraca") %>% group_by(Class,Order) %>% summarise(number_of_species=n())
ggplot()+
geom_col(data = most_abudant_classes, aes(x=Order, y= number_of_species, fill=Order),show.legend = F)+
geom_text(data = most_abudant_classes,aes(x =Order,y= number_of_species, label=number_of_species), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,200,50),limits = c(0,200))+
#ggtitle("Inferring methods of the Sign Score of the PPI network of Drosophila gene")+
labs(x="Order", y= "Number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))+
facet_wrap(~ Class,scales = "free", ncol=1)
ggsave("most_abudant_classes.jpeg", plot = last_plot(), width = 15,height = 20,units = "cm",device = "jpeg", dpi = 300,path = "Plots/")
## Per administrative division
### Species
species_Region <- census_all_species_all_caves %>% filter(species_epithet!="sp.") %>% dplyr::select(Species,Region) %>% distinct() %>% group_by(Region) %>% summarise(number_of_species=n()) %>% na.omit()
species_Municipality <- census_all_species_all_caves %>% filter(species_epithet!="sp.") %>% dplyr::select(Species,Municipality) %>% distinct() %>% group_by(Municipality) %>% summarise(number_of_species=n()) %>% na.omit()
### Caves
caves_municipality <- caves %>% dplyr::select(Cave_ID,Cave_Name,Municipality) %>% distinct() %>% group_by(Municipality) %>% summarise(number_of_caves=n()) %>% na.omit()
## Ecological classification
species_classification <- species %>% dplyr::select(Species_Full_Name, Classification)
species_classification_summary <- species %>% group_by(Classification) %>% summarise(number_of_species=n()) %>% mutate(frequency=round(number_of_species/sum(number_of_species),digits = 3)) %>% mutate(Species_status="All species")
ggplot()+
geom_col(data = species_classification_summary, aes(x=Classification, y= number_of_species, fill=Classification),show.legend = F)+
geom_text(data = species_classification_summary,aes(x =Classification,y= number_of_species, label=number_of_species), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,350,50),limits = c(0,350))+
labs(x="Ecological Classification", y= "Number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_ecological_classification.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
ggplot()+
geom_col(data = species_classification_summary, aes(x=Classification, y= frequency, fill=Classification),show.legend = F)+
geom_text(data = species_classification_summary,aes(x =Classification,y= frequency, label=frequency), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,1,0.1),limits = c(0,1))+
labs(x="Ecological Classification", y= "Frequency")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_ecological_classification_frequency.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
ggplot()+
geom_col(data = species_classification_summary, aes(x="", y= frequency, fill=Classification),width = 1,show.legend = T)+
labs(x = "", y = "")+
#geom_text(aes(x = 3.5, y = ((ymin+ymax)/2), label = Greek_Red_Data_Book)) +
#scale_y_continuous(breaks = 0:10)+  #labs(x="Greek red data list", y= "Frequency")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_blank(),axis.text.y = element_blank(),panel.border = element_blank(),axis.ticks=element_blank())+
coord_polar(theta = "y")
ggsave("species_classification_summary_pie.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
# For endemic species.
species_classification_categories <- data.frame(Classification=unique(species$Classification))
species_classification_summary_endemic <- species %>% filter(Distribution=="Endemic to Greece") %>% group_by(Classification) %>% summarise(number_of_species=n()) %>% mutate(frequency=round(number_of_species/sum(number_of_species),digits = 3)) %>% mutate(Species_status="Endemic to Greece")
species_classification_summary_endemic_all_categories <- species_classification_categories %>% left_join(species_classification_summary_endemic,by=c("Classification"="Classification")) %>% mutate(number_of_species=if_else(is.na(number_of_species),0,as.numeric(number_of_species))) %>% mutate(frequency=round(number_of_species/sum(number_of_species),digits = 3)) %>% mutate(Species_status="Endemic to Greece")
ggplot()+
geom_col(data = species_classification_summary_endemic, aes(x=Classification, y= number_of_species, fill=Classification),show.legend = F)+
geom_text(data = species_classification_summary_endemic,aes(x =Classification,y= number_of_species, label=number_of_species), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,300,50),limits = c(0,300))+
#ggtitle("Inferring methods of the Sign Score of the PPI network of Drosophila gene")+
labs(x="Ecological Classification", y= "Number of species endemic to Greece")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_ecological_classification_only_endemic.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
classification_all_and_endemic <- rbind(species_classification_summary_endemic_all_categories,species_classification_summary)
classification_all_and_endemic$Classification <- factor(classification_all_and_endemic$Classification,levels = c("Accidental","Trogloxene","Stygoxene","Stygophile","Troglophile","Stygobiont","Troglobiont"))
species_ecological_classification_all_and_endemic <- ggplot()+
geom_col(data = classification_all_and_endemic, aes(x=Classification, y= number_of_species, fill=Species_status,width=0.8), position = position_dodge(width = 0.8),show.legend = T)+
geom_text(data = classification_all_and_endemic,aes(x =Classification,y= number_of_species, label=number_of_species,group=Species_status), position=position_dodge(width=0.9), vjust=-0.25,size=6)+
scale_y_continuous(breaks = seq(0,350,25),limits = c(0,350),expand = c(0.01,0.4))+
scale_fill_manual(labels=c("All species","Species endemic to Greece"),values = c("lightgoldenrod2","lightpink1"),name="")+
labs(x="Classification", y= "Number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size = 18),axis.text.y=element_text(margin = margin(t = 0, r = 0, b = 0, l = 10,unit = "pt"),size = 18),axis.text.x = element_text(margin = margin(t = 0, r = 0, b = 12, l = 0,unit = "pt"),angle = 45, hjust = 1,size = 18),axis.title = element_text(size=22),panel.border = element_blank(),axis.line.x = element_line(colour = 'black', size = 0.3), axis.line.y = element_line(colour = 'black', size = 0.3),legend.position = c(0.132,0.93), legend.key.size = unit(1.5, "cm"))
ggsave("species_ecological_classification_all_and_endemic.png", plot = species_ecological_classification_all_and_endemic, device = "png",width = 20,height = 11.25,units = "in", dpi = 100,path = "Website_plots/")
## Locus Typicus
species_class_locus <- species %>% filter(!(is.na(Locus_Typicus_Cave))) %>% dplyr::select(Species_Full_Name,Class) %>% distinct() %>% group_by(Class) %>% summarise(number_of_species=n()) %>% na.omit()
ggplot()+
geom_col(data = species_class_locus, aes(x=Class, y= number_of_species, fill=Class),show.legend = F)+
geom_text(data = species_class_locus,aes(x =Class,y= number_of_species, label=number_of_species), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,150,25),limits = c(0,125))+
#ggtitle("Inferring methods of the Sign Score of the PPI network of Drosophila gene")+
labs(x="Class", y= "Number of species with Locus Typicus Greek caves")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_class_barplot_locus_typicus.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
species_class_locus_typicus_count <- species %>% filter(!(is.na(Locus_Typicus_Cave))) %>% dplyr::select(Species_Full_Name,Class,Locus_Typicus_Cave,Locus_Typicus_Cave_ID) %>% distinct() %>% group_by(Locus_Typicus_Cave_ID,Locus_Typicus_Cave) %>% summarise(number_of_species=n()) %>% na.omit() %>% arrange(desc(number_of_species))
species_class_locus_typicus_count_dist <- species_class_locus_typicus_count %>% group_by(number_of_species) %>% summarise(number_of_caves=n())
ggplot(data=species_class_locus_typicus_count_dist)+
geom_line(aes(x=number_of_species, y= number_of_caves),color="dodgerblue2",show.legend = F)+
geom_point(aes(x=number_of_species, y= number_of_caves),color="dodgerblue2",show.legend = F, size=1)+
#ggtitle("Species")+
scale_y_continuous(breaks = seq(0,75,5),limits = c(0,75))+
scale_x_continuous(breaks = seq(0,12,1), limits = c(0,12))+
labs(x="Number of species", y= "Number of Locus Typicus caves")+
theme_bw()+theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("cave_dist_locus_typicus.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
kable(x = head(species_class_locus_typicus_count,15))
# Species Richness and Altitude
caves_per_altitude <- caves %>% distinct(Cave_ID,Altitude,Region) %>% na.omit() %>% mutate(Bins=cut(Altitude,breaks=seq(0,2200,by=100))) %>% group_by(Bins) %>%  mutate(Mean_altitude=mean(Altitude)) %>% mutate(number_of_caves=n()) %>% distinct(Mean_altitude,Bins,number_of_caves) #
ggplot()+
geom_line(data = caves_per_altitude, aes(x=Mean_altitude, y=number_of_caves),show.legend = T)+
#geom_freqpoly(data = species_per_altitude, aes(x=Altitude),binwidth = 100,show.legend = T)+
scale_y_continuous(breaks = seq(0,150,20),limits = c(0,150))+
scale_x_continuous(breaks = seq(0,2200,200),limits = c(0,2200))+
ggtitle("Altitude of the caves of Crete")+
labs(x="Altitude", y= "Number of caves")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("caves_per_altitude.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
species_per_altitude <- census_all_species_all_caves %>% filter(species_epithet!="sp.") %>% distinct(Species,Classification,Class,Altitude) %>% mutate(Classification_short=gsub(pattern="\\?",replacement = "",x = Classification)) %>% mutate(Bins=cut(Altitude,breaks=seq(0,2200,by=100))) %>% group_by(Bins) %>% mutate(Mean_altitude=mean(Altitude)) %>% distinct(Species,Classification,Class,Mean_altitude) #
species_per_altitude_summary <- species_per_altitude %>% group_by(Mean_altitude) %>% summarise(number_of_species=n())
ggplot()+
geom_line(data = species_per_altitude_summary, aes(x=Mean_altitude,y=number_of_species))+
#geom_freqpoly(data = species_per_altitude, aes(x=Altitude),binwidth = 100,show.legend = T)+
scale_y_continuous(breaks = seq(0,400,50),limits = c(0,300))+
scale_x_continuous(breaks = seq(0,2200,200),limits = c(0,2200))+
ggtitle("Species richness and altitude")+
labs(x="Altitude", y= "Number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_per_altitude.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
species_per_altitude_summary_classification <- species_per_altitude %>% group_by(Mean_altitude,Classification) %>% summarise(number_of_species=n())
ggplot()+
geom_line(data = species_per_altitude_summary, aes(x=Mean_altitude,y=number_of_species),color="black")+
geom_line(data = species_per_altitude_summary_classification, aes(x=Mean_altitude,y=number_of_species,color=Classification),show.legend = T)+
scale_y_continuous(breaks = seq(0,300,25),limits = c(0,300))+
scale_x_continuous(breaks = seq(0,2200,200),limits = c(0,2200))+
ggtitle("Species richness and altitude for different ecological classifications")+
labs(x="Altitude", y= "Number of species")+
theme_bw()+
scale_color_brewer(palette="Set3")+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
