geom_col(data = caves_protection_data_summary_type, aes(x=Protection_Type, y= frequency, fill=Protection_Type),show.legend = F)+
geom_text(data = caves_protection_data_summary_type,aes(x =Protection_Type,y= frequency, label=frequency), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,1,0.1),limits = c(0,1))+
labs(x="Protection", y= "Frequency of caves")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("caves_protection_data_type_frequency.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
# Protection status species
species_protection <- strsplit(x = species$Protection_Status,split = "|",fixed=TRUE)
species_protection_data <- data_frame(Species_Protection=unlist(species_protection),Species=rep.int(species$Species_Full_Name,times = sapply(species_protection,length)),Class=rep.int(species$Class,times = sapply(species_protection,length)),Classification=rep.int(species$Classification,times = sapply(species_protection,length)))
species_protection_data_summary <- species_protection_data %>% group_by(Species_Protection) %>% summarise(number_of_species=n())
# ggplot()+
#   geom_col(data = species_protection_data_summary, aes(x=Species_Protection, y= number_of_species, fill=Species_Protection),show.legend = F)+
#   geom_text(data = species_protection_data_summary,aes(x =Species_Protection,y= number_of_species, label=number_of_species), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
#   scale_y_continuous(breaks = seq(0,780,50),limits = c(0,780))+
#   #ggtitle("Inferring methods of the Sign Score of the PPI network of Drosophila gene")+
#   labs(x="Protection", y= "Number of species")+
#   theme_bw()+
#   theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
#
# ggsave("species_protection_data_summary.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
#
kable(x = species_protection_data_summary)
species_protection_data_classification <- species_protection_data %>% mutate(Protection_Status=if_else(is.na(Species_Protection)==TRUE,"Not protected","Protected")) %>% distinct(Classification,Protection_Status,Species) %>% group_by(Classification,Protection_Status) %>% summarise(number_of_species=n()) %>% ungroup() %>% spread(key = Protection_Status,value = number_of_species,fill=0) %>% gather(key =Protection_Status,value =number_of_species,  -Classification)
species_protection_data_classification$Classification <- factor(species_protection_data_classification$Classification,levels = c("Accidental","Trogloxene","Stygoxene","Stygophile","Troglophile","Stygobiont","Troglobiont"))
species_protection_data_classification_plot <- ggplot()+
geom_col(data = species_protection_data_classification, aes(x=Classification, y= number_of_species, fill=Protection_Status,group=Protection_Status),position="dodge",show.legend = T)+
geom_text(data = species_protection_data_classification,aes(x =Classification,y= number_of_species, label=number_of_species,group=Protection_Status), position=position_dodge(width=0.93), vjust=-0.25,size=6)+
scale_y_continuous(breaks = seq(0,350,25),limits = c(0,350),expand = c(0.01,0.4))+
scale_fill_manual(values = c("lightcoral","lightgreen"),name="")+
labs(x="Classification", y= "Number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size = 18),axis.text.y=element_text(margin = margin(t = 0, r = 0, b = 0, l = 10,unit = "pt"),size = 18),axis.text.x = element_text(margin = margin(t = 0, r = 0, b = 10, l = 0,unit = "pt"),angle = 45, hjust = 1,size = 18),axis.title = element_text(size=22),panel.border = element_blank(),axis.line.x = element_line(colour = 'black', size = 0.3), axis.line.y = element_line(colour = 'black', size = 0.3),legend.position = c(0.09,0.90), legend.key.size = unit(1.5, "cm"))
ggsave("species_protection_data_classification.png", plot = species_protection_data_classification_plot, device = "png",width = 20,height = 11.25,units = "in", dpi = 100,path = "Website_plots/")
species_protection_data_classification %>% spread(key = Protection_Status,value = number_of_species,fill=0) %>% kable()
# Species per cave
census_caves_per_species <- census_all_species %>% filter(species_epithet!="sp.") %>% distinct(Species,Cave_ID, Cave_Name,Classification) %>% group_by(Species) %>% summarise(number_of_caves=n()) %>% arrange(desc(number_of_caves))
census_species_per_cave <- census_all_species %>% filter(species_epithet!="sp.") %>% distinct(Species,Cave_ID, Cave_Name,Classification) %>% group_by(Cave_ID,Cave_Name) %>% summarise(number_of_species=n()) %>% arrange(desc(number_of_species))
census_species_per_cave_dist <- census_species_per_cave %>% group_by(number_of_species) %>% summarise(number_of_caves=n())
ggplot(data=census_species_per_cave_dist)+
#=geom_line(aes(x=number_of_caves, y= number_of_species),color="dodgerblue2",show.legend = F)+
geom_point(aes(x=number_of_caves, y= number_of_species),color="dodgerblue2",show.legend = F, size=1)+
#ggtitle("Species")+
scale_y_continuous(breaks = seq(0,75,5),limits = c(0,75))+
scale_x_continuous(breaks = seq(0,200,25), limits = c(0,200))+
labs(x="Number of caves", y= "Number of species")+
theme_bw()+theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("census_species_per_cave_dist.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
kable(x = head(census_species_per_cave,20))
## Endemic species per region
species_region_endemic <- census_all_species_all_caves %>% filter(species_epithet!="sp.") %>% filter(Distribution=="Endemic to Greece") %>% distinct( Species,Region) %>% group_by(Species) %>% summarize(number_of_regions=n()) %>% group_by(number_of_regions) %>% summarise(number_of_species=n())
ggplot(data=species_region_endemic)+
geom_line(aes(x=number_of_regions, y= number_of_species),color="dodgerblue2",show.legend = F)+
geom_point(aes(x=number_of_regions, y= number_of_species),color="dodgerblue2",show.legend = F, size=1)+
ggtitle("Endemic to Greece species appearance in regions")+
scale_y_continuous(breaks = seq(0,375,25),limits = c(0,375))+
scale_x_continuous(breaks = seq(0,8,1), limits = c(0,8))+
labs(x="Number of regions", y= "Number of endemic to Greece species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
ggsave("dist_species_region_endemic.jpeg", plot = last_plot(), device = "jpeg",width = 13,height = 18,units = "cm", dpi = 300,path = "Plots/")
## Ecological classification
#census_species_per_cave_classification <- census_all_species %>% filter(species_epithet!="sp.") %>% distinct(Species,Cave_ID, Cave_Name,Classification) %>% group_by(Cave_ID,Cave_Name,Classification) %>% summarise(number_of_species=n()) %>% arrange(desc(number_of_species)) %>% na.omit() %>% spread(Classification,number_of_species,fill = 0) %>% ungroup() %>% mutate(Troglobiont_species=rowSums(.[9:10]))
census_species_per_cave_classification <- census_all_species %>% filter(species_epithet!="sp.") %>% distinct(Species,Cave_ID, Cave_Name,Classification) %>% group_by(Cave_ID,Cave_Name,Classification) %>% summarise(number_of_species=n()) %>% arrange(desc(number_of_species)) %>% na.omit()
census_species_per_cave_classification_trogl <- census_species_per_cave_classification %>% filter(Classification=="Troglobiont")%>% distinct(Cave_ID, Cave_Name, Classification,number_of_species) %>% arrange(desc(Classification))
kable(x = head(census_species_per_cave_classification_trogl,20))
# Taxon Occurencies Distribution
# Species, Genera, Families abudance in caves of Greece
# Species occurencies distributions
species_occurencies_caves <- census_all_species %>% group_by(Species) %>% filter(species_epithet!="sp.") %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Species")
dist_species_occurencies_caves <- ggplot(data=species_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="dodgerblue2",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="dodgerblue2",show.legend = F, size=1)+
ggtitle("Species")+
scale_y_continuous(breaks = seq(0,600,100),limits = c(0,600))+
scale_x_continuous(breaks = seq(0,90,10), limits = c(0,90))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Genera occurencies distributions
genera_occurencies_caves <- census_all_species %>% group_by(Genus) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Genus")
dist_genera_occurencies_caves <-  ggplot(data=genera_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="orange",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="orange",show.legend = F, size=1)+
ggtitle("Genus")+
scale_y_continuous(breaks = seq(0,210,50),limits = c(0,210))+
scale_x_continuous(breaks = seq(0,210,50), limits = c(0,210))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Family occurencies distribution
family_occurencies_caves <- census_all_species %>% group_by(Family) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Family")
dist_family_occurencies_caves <- ggplot(data=family_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="turquoise",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="turquoise",show.legend = F, size=1)+
ggtitle("Family")+
scale_x_continuous(breaks = seq(0,250,50),limits = c(0,250))+
scale_y_continuous(breaks = seq(0,90,20), limits = c(0,90))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Order occurencies distributions
order_occurencies_caves <- census_all_species %>% group_by(Order) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Order")
dist_order_occurencies_caves <- ggplot(data=order_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="purple",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="purple",show.legend = F, size=1)+
ggtitle("Order")+
scale_x_continuous(breaks = seq(0,600,100),limits = c(0,600))+
scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
## Class occurencies
class_occurencies_caves <- census_all_species %>% group_by(Class) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Class")
dist_class_occurencies_caves <- ggplot(data=class_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="red",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="red",show.legend = F, size=1)+
ggtitle("Class")+
scale_y_continuous(breaks = seq(0,5,1),limits = c(0,4))+
scale_x_continuous(breaks = seq(0,900,150), limits = c(0,900))+
labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
## Merge distributions
occurences_taxa <- do.call("rbind",list(species_occurencies_caves,genera_occurencies_caves,family_occurencies_caves,order_occurencies_caves,class_occurencies_caves))
### Arrange plots
distributions_occurences_taxa <- grid.arrange(dist_species_occurencies_caves,arrangeGrob(dist_genera_occurencies_caves,dist_family_occurencies_caves,dist_order_occurencies_caves,dist_class_occurencies_caves,ncol=2),nrow = 2,bottom=textGrob("Number of occurencies in caves", gp=gpar(fontface="plain", col="black", fontsize=11)),left=textGrob("Number of taxa", gp=gpar(fontface="plain", col="black",fontsize=11), rot=90), heights=c(0.35,0.65))
ggsave("distributions_distributions_occurences_taxa.jpeg", plot = distributions_occurences_taxa, device = "jpeg",width = 13,height = 18,units = "cm", dpi = 300,path = "Plots/")
## Without chiroptera
species_occurencies_no_chiroptera <- census_all_species %>% filter(Order!="Chiroptera",species_epithet!="sp.")
# Species occurencies distributions
species_occurencies_caves <- species_occurencies_no_chiroptera %>% group_by(Species) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Species")
dist_species_occurencies_caves <- ggplot(data=species_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="dodgerblue2",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="dodgerblue2",show.legend = F, size=1)+
ggtitle("Species")+
scale_y_continuous(breaks = seq(0,600,100),limits = c(0,600))+
scale_x_continuous(breaks = seq(0,50,5), limits = c(0,50))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Genera occurencies distributions
genera_occurencies_caves <- species_occurencies_no_chiroptera %>% group_by(Genus) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Genus")
dist_genera_occurencies_caves <-  ggplot(data=genera_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="orange",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="orange",show.legend = F, size=1)+
ggtitle("Genus")+
scale_y_continuous(breaks = seq(0,210,50),limits = c(0,210))+
scale_x_continuous(breaks = seq(0,210,25), limits = c(0,150))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Family occurencies distribution
family_occurencies_caves <- species_occurencies_no_chiroptera %>% group_by(Family) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Family")
dist_family_occurencies_caves <- ggplot(data=family_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="turquoise",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="turquoise",show.legend = F, size=1)+
ggtitle("Family")+
scale_x_continuous(breaks = seq(0,150,25),limits = c(0,150))+
scale_y_continuous(breaks = seq(0,90,20), limits = c(0,90))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Order occurencies distributions
order_occurencies_caves <- species_occurencies_no_chiroptera %>% group_by(Order) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Order")
dist_order_occurencies_caves <- ggplot(data=order_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="purple",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="purple",show.legend = F, size=1)+
ggtitle("Order")+
scale_x_continuous(breaks = seq(0,600,100),limits = c(0,600))+
scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
## Class occurencies
class_occurencies_caves <- species_occurencies_no_chiroptera %>% group_by(Class) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Class")
dist_class_occurencies_caves <- ggplot(data=class_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="red",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="red",show.legend = F, size=1)+
ggtitle("Class")+
scale_y_continuous(breaks = seq(0,5,1),limits = c(0,4))+
scale_x_continuous(breaks = seq(0,900,150), limits = c(0,900))+
labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
## Merge distributions
occurences_taxa <- do.call("rbind",list(species_occurencies_caves,genera_occurencies_caves,family_occurencies_caves,order_occurencies_caves,class_occurencies_caves))
### Arrange plots
distributions_occurences_taxa <- grid.arrange(dist_species_occurencies_caves,arrangeGrob(dist_genera_occurencies_caves,dist_family_occurencies_caves,dist_order_occurencies_caves,dist_class_occurencies_caves,ncol=2),nrow = 2,bottom=textGrob("Number of occurencies in caves", gp=gpar(fontface="plain", col="black", fontsize=11)),left=textGrob("Number of taxa (no chiroptera)", gp=gpar(fontface="plain", col="black",fontsize=11), rot=90), heights=c(0.35,0.65))
ggsave("distributions_distributions_occurences_taxa_no_chiroptera.jpeg", plot = distributions_occurences_taxa, device = "jpeg",width = 13,height = 18,units = "cm", dpi = 300,path = "Plots/")
## Only chiroptera
species_occurencies_only_chiroptera <- census_all_species %>% filter(Order=="Chiroptera", species_epithet!="sp.")
species_occurencies_only_chiroptera2 <- species_occurencies_only_chiroptera %>% dplyr::select(Order,Family,Genus,Species) %>% distinct()
# Species occurencies distributions
species_occurencies_caves <- species_occurencies_only_chiroptera %>% group_by(Species) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Species")
dist_species_occurencies_caves <- ggplot(data=species_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="dodgerblue2",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="dodgerblue2",show.legend = F, size=1)+
ggtitle("Species")+
#scale_y_continuous(breaks = seq(0,600,100),limits = c(0,600))+
scale_x_continuous(breaks = seq(0,50,5), limits = c(0,50))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Genera occurencies distributions
genera_occurencies_caves <- species_occurencies_only_chiroptera %>% group_by(Genus) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Genus")
dist_genera_occurencies_caves <-  ggplot(data=genera_occurencies_caves)+
geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="orange",show.legend = F)+
geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="orange",show.legend = F, size=1)+
ggtitle("Genus")+
scale_y_continuous(breaks = seq(0,3,1),limits = c(0,3))+
scale_x_continuous(breaks = seq(0,210,25), limits = c(0,150))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Family occurencies distribution
family_occurencies_caves <- species_occurencies_only_chiroptera %>% group_by(Family) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Family")
# dist_family_occurencies_caves <- ggplot(data=family_occurencies_caves)+
#   geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="turquoise",show.legend = F)+
#   geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="turquoise",show.legend = F, size=1)+
#   ggtitle("Family")+
#   scale_x_continuous(breaks = seq(0,150,25),limits = c(0,150))+
#   scale_y_continuous(breaks = seq(0,90,20), limits = c(0,90))+
#   #labs(x="Number of species", y= "Number of taxa")+
#   theme_bw()+
#   theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
# Order occurencies distributions
order_occurencies_caves <- species_occurencies_only_chiroptera %>% group_by(Order) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Order")
# dist_order_occurencies_caves <- ggplot(data=order_occurencies_caves)+
#   geom_line(aes(x=taxon_occurences, y= number_of_taxon),color="purple",show.legend = F)+
#   geom_point(aes(x=taxon_occurences, y= number_of_taxon),color="purple",show.legend = F, size=1)+
#   ggtitle("Order")+
#   scale_x_continuous(breaks = seq(0,600,100),limits = c(0,600))+
#   scale_y_continuous(breaks = seq(0,20,5), limits = c(0,20))+
#   #labs(x="Number of species", y= "Number of taxa")+
#   theme_bw()+
#   theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
## Class occurencies
class_occurencies_caves <- species_occurencies_only_chiroptera %>% group_by(Class) %>% summarise(taxon_occurences=n()) %>% group_by(taxon_occurences) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Class")
## Merge distributions
occurences_taxa <- do.call("rbind",list(species_occurencies_caves,genera_occurencies_caves,family_occurencies_caves,order_occurencies_caves,class_occurencies_caves))
### Arrange plots
distributions_occurences_taxa <- grid.arrange(dist_species_occurencies_caves,dist_genera_occurencies_caves,nrow = 2,bottom=textGrob("Number of occurencies in caves", gp=gpar(fontface="plain", col="black", fontsize=11)),left=textGrob("Number of taxa (only chiroptera)", gp=gpar(fontface="plain", col="black",fontsize=11), rot=90), heights=c(0.35,0.65))
ggsave("distributions_distributions_occurences_taxa_only_chiroptera.jpeg", plot = distributions_occurences_taxa, device = "jpeg",width = 13,height = 18,units = "cm", dpi = 300,path = "Plots/")
## Taxon - Subtaxon Distribution
# Genus
species_occurencies_unique_species_genus_dist <- species %>% dplyr::select(Species_Full_Name,Genus) %>% distinct() %>% group_by(Genus) %>% summarise(number_of_species=n()) %>% group_by(number_of_species) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Genus")
# Family
species_occurencies_unique_species_Family_dist <- species %>% dplyr::select(Species_Full_Name,Family) %>% distinct() %>% group_by(Family) %>% summarise(number_of_species=n()) %>% group_by(number_of_species) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Family")
# Order
species_occurencies_unique_species_Order_dist <- species %>% dplyr::select(Species_Full_Name,Order) %>% distinct() %>% group_by(Order) %>% summarise(number_of_species=n()) %>% group_by(number_of_species) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Order")
# Class
species_occurencies_unique_species_Class_dist <- species %>% dplyr::select(Species_Full_Name,Class) %>% distinct() %>% group_by(Class) %>% summarise(number_of_species=n()) %>% group_by(number_of_species) %>% summarise(number_of_taxon=n()) %>% mutate(taxon="Class")
species_taxon_distributions <- do.call("rbind", list(species_occurencies_unique_species_genus_dist, species_occurencies_unique_species_Family_dist, species_occurencies_unique_species_Order_dist,species_occurencies_unique_species_Class_dist))
ggplot()+
geom_point(data = species_taxon_distributions, aes(x=number_of_species, y= number_of_taxon, color=taxon),show.legend = T)+
#ggtitle("Inferring methods of the Sign Score of the PPI network of Drosophila gene")+
scale_y_continuous(breaks = seq(0,320,20),limits = c(0,320))+
scale_x_continuous(breaks = seq(0,280,20),limits = c(0,280))+
labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("species_taxon_distributions_plot.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
dist_class <- species_taxon_distributions %>% filter(taxon=="Class") %>%
ggplot(data=.)+
geom_line(aes(x=number_of_species, y= number_of_taxon),color="red",show.legend = F)+
geom_point(aes(x=number_of_species, y= number_of_taxon),color="red",show.legend = F, size=1)+
ggtitle("Class")+
scale_y_continuous(breaks = seq(0,5,1),limits = c(0,4))+
scale_x_continuous(breaks = seq(0,300,50), limits = c(0,300))+
labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
dist_order <- species_taxon_distributions %>% filter(taxon=="Order") %>%
ggplot(data=.)+
geom_line(aes(x=number_of_species, y= number_of_taxon),color="purple",show.legend = F)+
geom_point(aes(x=number_of_species, y= number_of_taxon),color="purple",show.legend = F, size=1)+
ggtitle("Order")+
scale_y_continuous(breaks = seq(0,20,5),limits = c(0,20))+
scale_x_continuous(breaks = seq(0,180,20), limits = c(0,180))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
dist_family <- species_taxon_distributions %>% filter(taxon=="Family") %>%
ggplot(data=.)+
geom_line(aes(x=number_of_species, y= number_of_taxon),color="turquoise",show.legend = F)+
geom_point(aes(x=number_of_species, y= number_of_taxon),color="turquoise",show.legend = F, size=1)+
ggtitle("Family")+
scale_y_continuous(breaks = seq(0,120,20),limits = c(0,120))+
scale_x_continuous(breaks = seq(0,80,10), limits = c(0,70))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
dist_genus <- species_taxon_distributions %>% filter(taxon=="Genus") %>%
ggplot(data=.)+
geom_line(aes(x=number_of_species, y= number_of_taxon),color="orange",show.legend = F)+
geom_point(aes(x=number_of_species, y= number_of_taxon),color="orange",show.legend = F, size=1)+
ggtitle("Genus")+
scale_y_continuous(breaks = seq(0,300,50),limits = c(0,300))+
scale_x_continuous(breaks = seq(0,30,5), limits = c(0,30))+
#labs(x="Number of species", y= "Number of taxa")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(),plot.title = element_text(hjust = 0.5, size = 11))
distributions_species_taxon <- grid.arrange(arrangeGrob(grobs = list(dist_class,dist_order,dist_family,dist_genus)), ncol=2,bottom=textGrob("Number of species", gp=gpar(fontface="plain", col="black", fontsize=11)), left=textGrob("Number of taxa", gp=gpar(fontface="plain", col="black",fontsize=11), rot=90),widths=c(9,0.5))
ggsave("distributions_species_taxon.jpeg", plot = distributions_species_taxon, device = "jpeg", dpi = 300,path = "Plots/")
# Links to other databases
## Cave Fauna of Greece database includes links of species to GBIF, Fauna Europea, IUCN, PESI and NCBI Taxonomy.
species_links <- species %>% dplyr::select(Link_IUCN,Link_GBIF,Link_Fauna_Europaea,Link_NCBI,Link_PESI)
species_links_summary <- data_frame(Source=c("Fauna Europaea","NCBI Taxonomy","GBIF","PESI","IUCN", "Total Species"), Number_of_links=c(sum(!is.na(species_links$Link_Fauna_Europaea)),sum(!is.na(species_links$Link_NCBI)),sum(!is.na(species_links$Link_GBIF)),sum(!is.na(species_links$Link_PESI)),sum(!is.na(species_links$Link_IUCN)), nrow(species_links)), Missing_links=c(nrow(species)-sum(!is.na(species_links$Link_Fauna_Europaea)),nrow(species)-sum(!is.na(species_links$Link_NCBI)),nrow(species)-sum(!is.na(species_links$Link_GBIF)),nrow(species)-sum(!is.na(species_links$Link_PESI)),nrow(species)-sum(!is.na(species_links$Link_IUCN)),nrow(species_links)-nrow(species_links))) %>% mutate(frequency=round(Number_of_links/nrow(species),digits = 3))
kable(species_links_summary)
# Bar plots of the links.
ggplot()+
geom_col(data = species_links_summary, aes(x=Source, y= Number_of_links, fill=Source),show.legend = F)+
geom_text(data = species_links_summary,aes(x =Source,y= Number_of_links, label=Number_of_links), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,nrow(species),100),limits = c(0,nrow(species)))+
labs(x="Database", y= "Number of species links")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_links_summary.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
ggplot()+
geom_col(data = species_links_summary, aes(x=Source, y= frequency, fill=Source),show.legend = F)+
geom_text(data = species_links_summary,aes(x =Source,y= frequency, label=frequency), position=position_dodge(width=0.7), vjust=-0.25,size=2.8)+
scale_y_continuous(breaks = seq(0,1,0.1),limits = c(0,1))+
labs(x="Database", y= "Frequency of species links")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("species_links_summary_frequency.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
PESI_vs_Fauna_E <- species %>% filter((is.na(Link_PESI) & !is.na(Link_Fauna_Europaea)) | (is.na(Link_Fauna_Europaea) & !is.na(Link_PESI))) %>% dplyr::select(Species_Full_Name,Link_Fauna_Europaea,Link_PESI)
# Census References
species_references_year_dist <- Census_references %>% group_by(Year) %>% summarise(publications_per_year=n())
ggplot()+
geom_line(data=species_references_year_dist,aes(x=Year, y= publications_per_year),color="red",show.legend = F)+
scale_x_continuous(breaks = seq(1860,2020,10),limits = c(1860,2020))+
scale_y_continuous(breaks = seq(0,20,2), limits = c(0,20))+
labs(x="Years",y="Number of new publications")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("species_references_year_dist.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
species_references_year_dist$Cumulative_publications <- cumsum(species_references_year_dist$publications_per_year)
ggplot(data=species_references_year_dist)+
geom_line(aes(x=Year, y= Cumulative_publications),color="mediumseagreen",show.legend = F)+
#ggtitle("Class")+
scale_x_continuous(breaks = seq(1860,2020,10),limits = c(1860,2020))+
scale_y_continuous(breaks = seq(0,750,100), limits = c(0,750))+
labs(x="Years",y="Cumulative publications")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("species_references_year_dist_cumulative.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
# New species discovered in time. (references)
census_long_man_reference <- census_long_man %>% left_join(Census_references,by=c("ReferenceShort"="Short"))
census$species_epithet <- as.character(lapply(strsplit(as.character(census$Species), split=" "), "[", n=2))
species_references_spreaded_arranged <- census_long_man_reference %>% ungroup() %>% dplyr::select(Species, ReferenceShort, Year) %>% group_by(Species,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% mutate(Cumulative_occurance= cumsum(First_occurance)) %>% mutate(Classification="All species") %>% dplyr::select(-c(Species,species_epithet,First_occurance)) %>% distinct(.)
ggplot()+
geom_line(data=species_references_spreaded_arranged,aes(x=Year, y= Cumulative_occurance),color="violetred1",show.legend = F)+
#ggtitle("Class")+
scale_x_continuous(breaks = seq(1860,2020,10),limits = c(1860,2020))+
scale_y_continuous(breaks = seq(0,950,100), limits = c(0,950))+
labs(x="Years",y="Cumulative species in Greek caves")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("species_occurrence_accumulation.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
qq <- species %>% filter(Distribution=="Endemic to Greece")
endemic_cumulative_species <- census_long_man_reference %>% left_join(species,by=c("Species"="Species_Full_Name")) %>% dplyr::select(Species,Distribution, ReferenceShort, Year) %>% group_by(Species,Distribution,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% filter(First_occurance==1) %>% group_by(Year,Distribution) %>% summarise(Occurance_species_year= n()) %>% group_by(Distribution) %>% mutate(Cumulative_occurance= cumsum(Occurance_species_year)) %>% filter(Distribution=="Endemic to Greece") %>% mutate(Classification="Endemic species to Greece") %>% dplyr::select(-Occurance_species_year,-Distribution)
census_long_man_reference_all_species_classification <- census_long_man_reference %>% left_join(species,by=c("Species"="Species_Full_Name")) %>% dplyr::select(Species,Classification, ReferenceShort, Year) %>% group_by(Species,Classification,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% filter(First_occurance==1) %>% group_by(Year,Classification) %>% summarise(Occurance_species_year= n()) %>% group_by(Classification) %>% mutate(Cumulative_occurance= cumsum(Occurance_species_year)) %>% dplyr::select(-Occurance_species_year) %>% bind_rows(species_references_spreaded_arranged) %>% filter(Classification %in% c("Troglobiont","Troglophile","All species")) %>% bind_rows(endemic_cumulative_species)
species_occurrence_accumulation_classification_plot <- ggplot()+
geom_line(data=census_long_man_reference_all_species_classification,aes(x=Year, y= Cumulative_occurance,color=Classification),size=1,show.legend = T)+
#ggtitle("Class")+
scale_x_continuous(breaks = seq(1860,2030,10),limits = c(1860,2030),expand=c(0.015,0))+
scale_y_continuous(breaks = seq(0,950,100), limits = c(0,913),expand = c(0.01,0))+
scale_color_manual(values =c("Endemic species to Greece"="lightcoral","Troglophile"="paleturquoise","Troglobiont"="darkolivegreen3","All species"="deepskyblue"))+
labs(x="Years",y="Cumulative number of species")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),legend.text = element_text(size = 18),axis.text.y=element_text(margin = margin(t = 0, r = 5, b = 0, l = 15,unit = "pt"),size = 18),axis.text.x = element_text(margin = margin(t = 5, r = 0, b = 15, l = 0,unit = "pt"),size = 18),axis.title = element_text(size=22),panel.border = element_blank(),axis.line.x = element_line(colour = 'black', size = 0.3), axis.line.y = element_line(colour = 'black', size = 0.3),legend.position = c(0.13,0.87), legend.key.size = unit(1.5, "cm"), legend.title = element_blank())
ggsave("species_occurrence_accumulation_classification.png", plot = species_occurrence_accumulation_classification_plot, device = "png",width = 20,height = 11.25,units = "in", dpi = 100,path = "Website_plots/")
species_references_spreaded_arranged_article <- species_references_spreaded_arranged %>% filter(Duplicates=="FALSE") %>% group_by(ReferenceShort, Year) %>% summarise(n_new_species=n()) %>% group_by(n_new_species) %>% summarise(n_references=n())
ggplot()+
geom_line(data=species_references_spreaded_arranged_article,aes(y=n_references, x= n_new_species),color="violetred1",show.legend = F)+
#ggtitle("Class")+
scale_x_continuous(breaks = seq(0,180,10),limits = c(0,100))+
scale_y_continuous(breaks = seq(0,180,20),limits = c(0,180))+
labs(x="Number of references",y="Number of new species additions in Greek caves")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank())
ggsave("species_references_spreaded_arranged_article.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
## Classes growth
census_long_man_reference_all_species <- census_long_man_reference %>% left_join(species,by=c("Species"="Species_Full_Name")) %>% dplyr::select(Species,Class, ReferenceShort, Year) %>% group_by(Species,Class,ReferenceShort, Year) %>% distinct(.) %>% arrange(.,Year) %>% ungroup() %>% mutate(Duplicates=duplicated(Species), species_epithet= as.character(lapply(strsplit(as.character(Species), split=" "), "[", n=2))) %>% filter(species_epithet!="sp.") %>% mutate(.,First_occurance=if_else(Duplicates=="FALSE",1,0)) %>% na.omit() %>% filter(First_occurance==1) %>% mutate(Cumulative_occurance_species= cumsum(First_occurance)) %>% group_by(Year,Class) %>% summarise(Occurance_species_class_year= n()) %>% group_by(Class) %>% mutate(Cumulative_occurance_class= cumsum(Occurance_species_class_year)) %>% filter(Class %in% c("Insecta","Mammalia","Arachnida","Malacostraca"))
ggplot()+
geom_line(data=census_long_man_reference_all_species,aes(y=Cumulative_occurance_class, x= Year, color=Class),show.legend = T)+
#ggtitle("Class")+
scale_x_continuous(breaks = seq(1860,2022,10),limits = c(1860,2025))+
scale_y_continuous(breaks = seq(0,250,25),limits = c(0,250))+
labs(x="Year",y="Cumulative number of species per year")+
theme_bw()+
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), legend.position = c(0.15,0.8))
ggsave("species_class_occurence_accumulation.jpeg", plot = last_plot(), device = "jpeg", dpi = 300,path = "Plots/")
# Spatial Analysis
#' # Spatial analysis of Caves
#'
#' For the creation of the caves geodatabase in r we used multiple packages.
#'
#' **For spatial analysis**
#'
#' 1. sp package [@R-sp]
#'
#' 2. rgeos package [@R-rgeos]
#'
#' 3. rgdal package [@R-raster]
#'
#' 4. raster package [@R-raster]
#'
#' **For spatial visualisations**
#' 1. Download the kml file
#' 2. rename the file to .xml
#' 3. from excel 2007 go to Data > From Other Sources > From XML Data Source
#' 4. Browse to where you saved the file to impoort into excel.
#' 5. Excel will prompt that it can find the schema and will try to make it by it's own, accept it and you should see your data imported successfully.
#'
#' This procedure resulted to a xlsx file with 67 columns and tha names and coordinates of caves were spread across them for some reason.
#'
#' So we used the [online convertor](www.gpsvisualizer.com) which resulted to a txt file with a consistent format.
#' ## Caves geographical data
Caves_Database_kml_to_txt <- caves %>% dplyr::select(Cave_Name,Cave_ID,Latitude, Longitude) %>% na.omit()
Caves_Database_kml_to_txt$Latitude <- as.numeric(Caves_Database_kml_to_txt$Latitude)
Caves_Database_kml_to_txt$Longitude <- as.numeric(Caves_Database_kml_to_txt$Longitude)
Caves_Database_kml_to_txt$ID <- as.character(seq(1:nrow(Caves_Database_kml_to_txt)))
Caves_Database_kml_to_txt_shapefile_wgs84 <- Caves_Database_kml_to_txt
coordinates(Caves_Database_kml_to_txt_shapefile_wgs84)<-~Longitude+Latitude
proj4string(Caves_Database_kml_to_txt_shapefile_wgs84) <- CRS("+proj=longlat +datum=WGS84")# CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")  # this is WGS84
Caves_Database_kml_to_txt_shapefile <- spTransform(Caves_Database_kml_to_txt_shapefile_wgs84, CRS( "+proj=longlat +datum=GGRS87 +no_defs"))
species_occurencies_unique_caves_without <- caves[which((is.na(caves$Latitude))),]
#' ## Administrative data of Greece
municipalities_shape_file_original <- rgdal::readOGR("Shapefiles/municipalities_shape_file/municipalities_Kallikratis_plan_Greece.shp",verbose=TRUE)
municipalities_shape_file <- spTransform(municipalities_shape_file_original, CRS("+proj=longlat +datum=GGRS87 +no_defs"))
#proj4string(municipalities_shape_file) <- CRS("+proj=longlat +datum=WGS84")# CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")  # this is WGS84
municipalities_greece_long_names_eng <- readxl::read_xlsx("Shapefiles/municipalities_shape_file/names_municipalities_gr_eng.xlsx",col_names = T)
municipalities_greece_long_names_eng$KWD_YPES <- as.character(municipalities_greece_long_names_eng$KWD_YPES)
municipalities_shape_file@data <- municipalities_shape_file@data %>% left_join(., municipalities_greece_long_names_eng, by=c("KWD_YPES"="KWD_YPES"))
rownames(municipalities_shape_file@data) <- as.character(seq(1:nrow(municipalities_shape_file@data)))
over_municipality <- sp::over( x = Caves_Database_kml_to_txt_shapefile , y = municipalities_shape_file , fn = NULL)
caves_in_municipa <- over_municipality
caves_in_municipa$ID <- as.character(seq(1:nrow(caves_in_municipa)))
caves_in_municipa2 <- caves_in_municipa %>% left_join(., Caves_Database_kml_to_txt, by=c("ID"="ID"))
caves_municipality_join <- caves %>% dplyr::select(Cave_ID,Cave_Name,Municipality) %>% distinct() %>% group_by(Municipality) %>% summarise(number_of_caves=n()) %>% na.omit() %>% left_join(.,municipalities_greece_long_names_eng, by=c("Municipality"="Municipalities_ISO_843"),copy=TRUE) %>% left_join(.,municipalities_greece_long_names_eng, by=c("KWD_YPES"="KWD_YPES"),copy=TRUE) %>% dplyr::select(Municipalities_ISO_843,KWD_YPES,number_of_caves) %>% ungroup() %>% filter(!(KWD_YPES=="9170" & !is.na(KWD_YPES)))
# Irakleio is 2 times but they are different municipalities. Irakleio Attikis has 9170 code so we removed it.
species_Municipality <- census_all_species_all_caves %>% dplyr::select(Species,Municipality) %>% distinct() %>% group_by(Municipality) %>% summarise(number_of_species=n()) %>% na.omit()
caves_species_municipality_join <-  caves_municipality_join %>% left_join(.,species_Municipality, by=c("Municipalities_ISO_843"="Municipality"))
## Protected areas of Greece
## Function capitals to lower
### caves with all protected areas
capwords <- function(s, strict = FALSE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
# All new Natura
natura2000_new_shapefile_v30  <- rgdal::readOGR("Shapefiles/GR_Natura2000_v30/gr_natura_v30.shp",verbose = T) #,p4s = "+proj=tmerc +lat_0=0 +lon_0=24 +k=0.9996 +x_0=500000 +y_0=0 +datum=GGRS87 +units=m +no_defs"
#,p4s = "+proj=longlat +datum=WGS84 +ellps=GRS80 +units=m +no_defs"
natura2000_new_shapefile_v30_wgs84 <- spTransform(natura2000_new_shapefile_v30, CRS("+proj=longlat +datum=WGS84")) #+proj=longlat +datum=GGRS87 +no_defs
names_natura2000_new_shapefile_v30 <- natura2000_new_shapefile_v30@data %>% mutate(id=as.character(seq(from=0,to=(nrow(.)-1))))
natura2000_new_shapefile_v30_dataframe <- broom::tidy(natura2000_new_shapefile_v30_wgs84) %>% left_join(., names_natura2000_new_shapefile_v30, by=c("id"="id"))
over_natura_NEW_v30 <- over( x = Caves_Database_kml_to_txt_shapefile_wgs84 , y = natura2000_new_shapefile_v30_wgs84 , returnList = T) # This is from rgeos, it contains multiple matches, thats why returnList=T. VERY Important
over_natura_NEW_v30_d <-Caves_Database_kml_to_txt %>% left_join(bind_rows(over_natura_NEW_v30,.id = "ID"),by=c("ID"="ID"))
## Only the new parts
natura2000_NEW_shapefile <- maptools::readShapePoly("Shapefiles/Natura2000_2017_NEW_shp/Kaloust/Nees_Natura", verbose = TRUE)
natura2000_NEW_shapefile_INFO <- maptools::readShapePoly("Shapefiles/Natura2000_2017_NEW_shp/NEES_FINAL_V10", verbose = TRUE)
natura2000_NEW_shapefile_INFO_df <- natura2000_NEW_shapefile_INFO@data %>% mutate(id=as.character(seq(from=0,to=(nrow(.)-1))))
natura2000_NEW_shapefile@data <-  natura2000_NEW_shapefile@data %>% mutate(id=as.character(seq(from=0,to=(nrow(.)-1)))) %>% left_join(natura2000_NEW_shapefile_INFO_df, by=c("id"="id")) %>% dplyr::select(-c(descriptio,timestamp,begin,end,altitudeMo,tessellate,extrude,visibility,drawOrder,icon))
proj4string(natura2000_NEW_shapefile) <- CRS("+proj=longlat +datum=WGS84")# CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs") # this is WGS84
## New Natura
natura2000_NEW_shapefile_names <- natura2000_NEW_shapefile@data %>% mutate(id=as.character(seq(from=0,to=(nrow(.)-1))))
natura2000_NEW_shapefile_dataframe <- broom::tidy(natura2000_NEW_shapefile) %>% left_join(., natura2000_NEW_shapefile_names, by=c("id"="id"))
##### Natura 2000
natura2000shapefile <- maptools::readShapePoly("Shapefiles/natura2000shapefile/natura2000shapefile",verbose=TRUE)
proj4string(natura2000shapefile) <- CRS("+proj=longlat +datum=WGS84") #CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")  # this is WGS84
natura2000shapefile_data <- natura2000shapefile@data %>% dplyr::select(CODE,NAME_LATIN)
### Katafygia agrias zois
#katafygia_agrias_zwhs <- maptools::readShapePoly("katafygia_agrias_zwhs/katafygia_agrias_zwhs",verbose=TRUE)
#proj4string(katafygia_agrias_zwhs) <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")  # this is WGS84
names_natura2000shapefile <- natura2000shapefile@data %>% mutate(id=as.character(seq(from=0,to=(nrow(.)-1)))) %>% mutate(NAME_LATIN_lower_letters=capwords(tolower(NAME_LATIN))) %>% mutate(SITETYPE_NATURA=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation ", "Special Protection Area - Special Area of Conservation"))))
natura2000shapefile_dataframe <- broom::tidy(natura2000shapefile) %>% left_join(., names_natura2000shapefile, by=c("id"="id"))
katafygia_agrias_zwhs <- maptools::readShapePoly("Shapefiles/KAZ_data/KAZ_data",verbose=TRUE)
proj4string(katafygia_agrias_zwhs) <- CRS("+proj=longlat +datum=WGS84")# CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")  # this is WGS84
KAZ_data_translated <- readxl::read_xlsx("Shapefiles/KAZ_data/KAZ_table_translated.xlsx",col_names = T)
KAZ_data_KODE <- read_csv("Shapefiles/KAZ_data/KAZ_data.csv",col_names = T) %>% dplyr::select(-the_geom) %>% left_join(KAZ_data_translated, by=c("KODE"="KODE"))
### katafygia_agrias_zwhs TIDY
#katafygia_agrias_zwhs_names$id <- as.character(seq(from=0,to=(nrow(katafygia_agrias_zwhs_names)-1)))
katafygia_agrias_zwhs_dataframe <- broom::tidy(katafygia_agrias_zwhs)
#%>% left_join(., katafygia_agrias_zwhs_names, by=c("id"="id"))
### New Natura Over
over_NEW_natura <- sp::over( x = Caves_Database_kml_to_txt_shapefile_wgs84, y = natura2000_NEW_shapefile , fn = NULL)
caves_in_over_NEW_natura <- over_NEW_natura %>% mutate(ID=as.character(seq(1:nrow(over_NEW_natura)))) %>% filter(SITE_TYPE=="SCI") %>% mutate(TYPE=gsub(pattern = "TROP",replacement = "Modified:",x =TYPE),Name_New_NATURA2=gsub(pattern = "TROP ",replacement = "",x = Name)) %>% left_join(Caves_Database_kml_to_txt,by=c("ID"="ID")) %>% dplyr::select(Cave_ID,TYPE,SITE_TYPE,Name_New_NATURA2) %>% left_join(natura2000shapefile_data, by=c("Name_New_NATURA2"="CODE")) %>% dplyr::select(-c(Name_New_NATURA2))
colnames(caves_in_over_NEW_natura) <- c("Cave_ID","CODE_NEW_NATURA","SITETYPE_NEW_NATURA", "NAME_LATIN_NEW_NATURA")
### over NATURA
over_natura <- sp::over( x = Caves_Database_kml_to_txt_shapefile_wgs84 , y = natura2000shapefile , fn = NULL)
# create file with the old and new natura2000 areas combined
caves_in_over_natura <- over_natura %>% mutate(ID=as.character(seq(1:nrow(over_natura)))) %>% left_join(Caves_Database_kml_to_txt,by=c("ID"="ID")) %>% dplyr::select(Cave_ID,CODE,SITETYPE,NAME_LATIN)
colnames(caves_in_over_natura) <- c("Cave_ID","CODE_NATURA","SITETYPE_NATURA", "NAME_LATIN_NATURA")
### over Katafygia agrias zwis
over_katafygia_agrias_zwhs <- sp::over( x = Caves_Database_kml_to_txt_shapefile_wgs84 , y = katafygia_agrias_zwhs , fn = NULL)
over_katafygia_agrias_zwhs$ID_cave <- as.character(seq(1:nrow(over_katafygia_agrias_zwhs)))
over_katafygia_agrias_zwhs_info <- over_katafygia_agrias_zwhs %>% dplyr::select(KODE,ID_cave) %>% left_join(KAZ_data_KODE, by=c("KODE"="KODE"))
caves_in_over_katafygia_agrias_zwhs <- Caves_Database_kml_to_txt %>% left_join(over_katafygia_agrias_zwhs_info,by=c("ID"="ID_cave")) %>% dplyr::select(Cave_ID,KODE,KAZ_NAME_GR,KAZ_Official_Government_Gazette)
caves_protection <- caves %>% dplyr::select(Cave_ID) %>% left_join(.,caves_in_over_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(.,caves_in_over_NEW_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(., caves_in_over_katafygia_agrias_zwhs, by=c("Cave_ID"="Cave_ID")) %>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN))))) %>% mutate(NAME_LATIN_NEW_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NEW_NATURA))))) %>% mutate(SITETYPE_NATURA_ALL=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))),SITETYPE_NEW_NATURA_ALL=ifelse(is.na(SITETYPE_NEW_NATURA), NA_character_, ifelse(SITETYPE_NEW_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NEW_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))))
colnames(caves_in_over_natura)
colnames(caves_in_over_NEW_natura)
#  left_join(.,over_natura_NEW_v30_d, by=c("Cave_ID"="Cave_ID")) %>%
caves_protection <- caves %>% dplyr::select(Cave_ID) %>% left_join(.,caves_in_over_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(.,caves_in_over_NEW_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(., caves_in_over_katafygia_agrias_zwhs, by=c("Cave_ID"="Cave_ID")) %>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NATURA))))) %>% mutate(NAME_LATIN_NEW_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NEW_NATURA))))) %>% mutate(SITETYPE_NATURA_ALL=ifelse(is.na(SITETYPE), NA_character_, ifelse(SITETYPE=="SPA","Special Protection Area", ifelse(SITETYPE=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))),SITETYPE_NEW_NATURA_ALL=ifelse(is.na(SITETYPE_NEW_NATURA), NA_character_, ifelse(SITETYPE_NEW_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NEW_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))))
#  left_join(.,over_natura_NEW_v30_d, by=c("Cave_ID"="Cave_ID")) %>%
caves_protection <- caves %>% dplyr::select(Cave_ID) %>% left_join(.,caves_in_over_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(.,caves_in_over_NEW_natura, by=c("Cave_ID"="Cave_ID")) %>% left_join(., caves_in_over_katafygia_agrias_zwhs, by=c("Cave_ID"="Cave_ID")) %>% mutate(NAME_LATIN_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NATURA))))) %>% mutate(NAME_LATIN_NEW_NATURA=gsub("NANA",NA_character_,gsub(" Kai "," and ",capwords(tolower(NAME_LATIN_NEW_NATURA))))) %>% mutate(SITETYPE_NATURA_ALL=ifelse(is.na(SITETYPE_NATURA), NA_character_, ifelse(SITETYPE_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))),SITETYPE_NEW_NATURA_ALL=ifelse(is.na(SITETYPE_NEW_NATURA), NA_character_, ifelse(SITETYPE_NEW_NATURA=="SPA","Special Protection Area", ifelse(SITETYPE_NEW_NATURA=="SCI","Special Area of Conservation", "Special Protection Area - Special Area of Conservation"))))
caves_protection
print("End of script")
